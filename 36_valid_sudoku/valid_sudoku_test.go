package validsudoku

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestIsValidSudoku(t *testing.T) {
	tables := []struct {
		input    [][]byte
		expected bool
	}{
		{
			[][]byte{
				{'5', '3', '.', '.', '7', '.', '.', '.', '.'},
				{'6', '.', '.', '1', '9', '5', '.', '.', '.'},
				{'.', '9', '8', '.', '.', '.', '.', '6', '.'},
				{'8', '.', '.', '.', '6', '.', '.', '.', '3'},
				{'4', '.', '.', '8', '.', '3', '.', '.', '1'},
				{'7', '.', '.', '.', '2', '.', '.', '.', '6'},
				{'.', '6', '.', '.', '.', '.', '2', '8', '.'},
				{'.', '.', '.', '4', '1', '9', '.', '.', '5'},
				{'.', '.', '.', '.', '8', '.', '.', '7', '9'},
			}, true,
		},
		{
			[][]byte{
				{'8', '3', '.', '.', '7', '.', '.', '.', '.'},
				{'6', '.', '.', '1', '9', '5', '.', '.', '.'},
				{'.', '9', '8', '.', '.', '.', '.', '6', '.'},
				{'8', '.', '.', '.', '6', '.', '.', '.', '3'},
				{'4', '.', '.', '8', '.', '3', '.', '.', '1'},
				{'7', '.', '.', '.', '2', '.', '.', '.', '6'},
				{'.', '6', '.', '.', '.', '.', '2', '8', '.'},
				{'.', '.', '.', '4', '1', '9', '.', '.', '5'},
				{'.', '.', '.', '.', '8', '.', '.', '7', '9'},
			}, false,
		},
		{
			[][]byte{
				{'.', '.', '5', '.', '.', '.', '.', '.', '.'},
				{'1', '.', '.', '2', '.', '.', '.', '.', '.'},
				{'.', '.', '6', '.', '.', '3', '.', '.', '.'},
				{'8', '.', '.', '.', '.', '.', '.', '.', '.'},
				{'3', '.', '1', '5', '2', '.', '.', '.', '.'},
				{'.', '.', '.', '.', '.', '.', '.', '4', '.'},
				{'.', '.', '6', '.', '.', '.', '.', '.', '.'},
				{'.', '.', '.', '.', '.', '.', '.', '9', '.'},
				{'.', '.', '.', '.', '.', '.', '.', '.', '.'},
			}, false,
		},
		{
			[][]byte{
				{'.', '.', '.', '.', '8', '.', '.', '.', '.'},
				{'.', '.', '.', '.', '.', '.', '5', '.', '.'},
				{'.', '.', '.', '.', '4', '.', '.', '2', '.'},
				{'.', '.', '.', '3', '.', '9', '.', '.', '.'},
				{'.', '.', '1', '8', '.', '.', '9', '.', '.'},
				{'.', '.', '.', '.', '.', '5', '1', '.', '.'},
				{'.', '.', '3', '.', '.', '8', '.', '.', '.'},
				{'.', '1', '2', '.', '3', '.', '.', '.', '.'},
				{'.', '.', '.', '.', '.', '7', '.', '.', '1'},
			}, true,
		},
		{
			[][]byte{
				{'.', '.', '.', '.', '.', '.', '5', '.', '.'},
				{'.', '.', '.', '.', '.', '.', '.', '.', '.'},
				{'.', '.', '.', '.', '.', '.', '.', '.', '.'},
				{'9', '3', '.', '.', '2', '.', '4', '.', '.'},
				{'.', '.', '7', '.', '.', '.', '3', '.', '.'},
				{'.', '.', '.', '.', '.', '.', '.', '.', '.'},
				{'.', '.', '.', '3', '4', '.', '.', '.', '.'},
				{'.', '.', '.', '.', '.', '3', '.', '.', '.'},
				{'.', '.', '.', '.', '.', '5', '2', '.', '.'},
			}, false,
		},
	}

	for _, table := range tables {
		x := isValidSudoku(table.input)
		assert.Equal(t, table.expected, x, "they should be equal")
	}

}
